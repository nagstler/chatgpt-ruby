name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.0', '3.1', '3.2']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # This will cache installed gems

    - name: Install dependencies
      run: bundle install

    - name: Run tests
      run: bundle exec rake test
      env:
        COVERAGE: true
        # Using a dummy API key since all API calls are mocked
        CHATGPT_API_KEY: 'test-key'

    - name: Publish code coverage
      uses: paambaati/codeclimate-action@v3.2.0
      if: github.ref == 'refs/heads/main' # Only run on main branch
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: bundle exec rake test
        coverageLocations: ${{github.workspace}}/coverage/.resultset.json:simplecov

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Run RuboCop
      run: bundle exec rubocop

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Install Brakeman
      run: gem install brakeman

    - name: Run Brakeman
      run: brakeman -A -q -w2

    - name: Check for vulnerable dependencies
      run: bundle exec bundle-audit check --update